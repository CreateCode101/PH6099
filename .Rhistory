table(glm_estimate2, titantic_train$Survived)
Training_GLM2 <- mean(glm_estimate2 == titantic_train$Survived)
Training_GLM2
library(MASS)
lda.fit1 <- lda(Survived ~  Pclass + Sex +  SibSp + log(Fare+0.1), data = titantic_train)
lda.fit1
plot(lda.fit1)
lda.pred <- predict(lda.fit1, titantic_train)
lda.class <- as.numeric(lda.pred$class)-1
table(lda.class, titantic_train$Survived)
Training_LDA <- mean(lda.class == titantic_train$Survived)
Training_LDA
qda.fit1 <- qda(Survived ~  Pclass + Sex +  SibSp + log(Fare+0.1), data = titantic_train)
qda.fit1
qda.class <- as.numeric(predict(qda.fit1, titantic_train)$class)-1
table(qda.class, titantic_train$Survived)
Training_QDA <- mean(qda.class == titantic_train$Survived)
Training_QDA
library(class)
#train.KNN <- cbind(titantic_train$Pclass)
train.KNN <- cbind(titantic_train$Fare)
knn.pred <- knn(train.KNN, train.KNN, titantic_train$Survived, k = 3)
knn.pred_adj <-as.numeric(knn.pred)-1
table(knn.pred_adj, titantic_train$Survived)
Training_KNN <- mean(knn.pred_adj==titantic_train$Survived)
Training_KNN
knn.pred <- knn(train.KNN, train.KNN, titantic_train$Survived, k = 1)
knn.pred_adj <-as.numeric(knn.pred)-1
dim(titantic_test$Pclass)
table(knn.pred_adj, titantic_train$Survived)
Training_KNN <- mean(knn.pred_adj==titantic_train$Survived)
Training_KNN
knn.pred <- knn(train.KNN, train.KNN, titantic_train$Survived, k = 2)
knn.pred_adj <-as.numeric(knn.pred)-1
dim(titantic_test$Pclass)
table(knn.pred_adj, titantic_train$Survived)
Training_KNN <- mean(knn.pred_adj==titantic_train$Survived)
Training_KNN
knn.pred <- knn(train.KNN, train.KNN, titantic_train$Survived, k = 4)
knn.pred_adj <-as.numeric(knn.pred)-1
dim(titantic_test$Pclass)
table(knn.pred_adj, titantic_train$Survived)
Training_KNN <- mean(knn.pred_adj==titantic_train$Survived)
Training_KNN
knn.pred <- knn(train.KNN, train.KNN, titantic_train$Survived, k = 2)
knn.pred_adj <-as.numeric(knn.pred)-1
dim(titantic_test$Pclass)
table(knn.pred_adj, titantic_train$Survived)
Training_KNN <- mean(knn.pred_adj==titantic_train$Survived)
Training_KNN
library(e1071)
library(e1071)
nb.fit1 <- naiveBayes(Survived ~ Pclass + Sex + SibSp, data = titantic_train)
nb.fit1
nb.predict1 <- predict(nb.fit1, titantic_train)
table(nb.predict1, titantic_train$Survived)
Training_NB <-mean(nb.predict1 == titantic_train$Survived)
Training_NB
nb.fit1 <- naiveBayes(Survived ~ Pclass + Sex + SibSp + log(Fare+0.1), data = titantic_train)
nb.fit1
nb.predict1 <- predict(nb.fit1, titantic_train)
nb.fit1 <- naiveBayes(Survived ~ Pclass + Sex + SibSp , data = titantic_train)
nb.fit1
nb.predict1 <- predict(nb.fit1, titantic_train)
table(nb.predict1, titantic_train$Survived)
Training_NB <-mean(nb.predict1 == titantic_train$Survived)
Training_NB
set.seed(1)
cv_tree1 <- cv.tree(tree1, FUN = prune.misclass)
library(tree)
library(ISLR)
library(rpart.plot)
library(rpart)
set.seed(1)
titantic_train2<- titantic_train
titantic_train2$Survived <- as.factor(titantic_train2$Survived)
titantic_train2$Sex <- as.factor(titantic_train2$Sex)
tree1 <- tree(Survived ~ Pclass + Sex + SibSp + Fare, titantic_train2)
summary(tree1)
tree1
{plot(tree1)
text(tree1, pretty = 0)}
tree1_pred <- predict(tree1, titantic_train2,type = "class")
table(tree1_pred, titantic_train2$Survived)
Test_Tree1 <- (table(tree1_pred, titantic_train2$Survived)[1,1] + table(tree1_pred, titantic_train2$Survived)[2,2]) / nrow(titantic_train2)
Training_Tree1
Training_Tree1 <- (table(tree1_pred, titantic_train2$Survived)[1,1] + table(tree1_pred, titantic_train2$Survived)[2,2]) / nrow(titantic_train2)
Training_Tree1
1-Training_Tree1
Training_Tree1
set.seed(1)
cv_tree1 <- cv.tree(tree1, FUN = prune.misclass)
cv_tree1
plot(cv_tree1$size, cv_tree1$dev, type = "b")
prune_tree <- prune.misclass(tree1, best = 4)
{plot(prune_tree)
text(prune_tree, pretty = 0)}
tree2_pred <- predict(prune_tree, titantic_train2, type = "class")
table(tree2_pred, titantic_train2$Survived)
Training_Tree2 <- (table(tree2_pred, titantic_train2$Survived)[1,1] + table(tree2_pred, titantic_train2$Survived)[2,2]) / nrow(titantic_train2)
Training_Tree2
library(gbm)
titantic_train3 <- titantic_train2
titantic_train3$Survived <- as.character(titantic_train3$Survived)
boost.tree <- gbm(Survived ~  Pclass + Sex + SibSp + Fare, data = titantic_train3,
distribution = "bernoulli", n.trees = 5000, shrinkage=0.01, verbose=F, interaction.depth = 4)
boost.tree
summary(boost.tree)
tree3_pred <- predict(boost.tree, titantic_train3, n.trees = 5000, type="response")
tree3_pred_num <- ifelse(tree3_pred>0.5,1,0)
Training_Tree_boost <- (table(tree3_pred_num, titantic_train2$Survived)[1,1] + table(tree3_pred_num, titantic_train2$Survived)[2,2]) / nrow(titantic_train2)
Training_Tree_boost
set.seed(1)
library(randomForest)
RF <- randomForest(Survived ~ Pclass +Sex + SibSp + Fare, data = titantic_train2, mtry = 4, importance = TRUE)
RF
tree_RF_pred <- predict(RF, newdata = titantic_train2)
table(tree_RF_pred, titantic_train2$Survived)
Training_Tree_RF <- (table(tree_RF_pred, titantic_train2$Survived)[1,1] + table(tree_RF_pred, titantic_train2$Survived)[2,2]) / nrow(titantic_train2)
Training_Tree_RF
1-Test_Tree_bag
1-Training_Tree_RF
Training_Tree_RF
glm_estimate_test <- rep(0, length(titantic_test$PassengerId))
glm.fits_predict_test <- predict(glm.fits1, titantic_test, type = "response")
glm_estimate_test[glm.fits_predict_test > .5] = 1
summary(glm_estimate_test)
length(glm_estimate_test)
submission1 <- cbind(titantic_test$PassengerId,glm_estimate_test)
write.csv(submission1, file = "submission1.csv")
titantic_test2<- titantic_test
titantic_test2$Sex <- as.factor(titantic_test2$Sex)
RF_estimate_test <- rep(0, length(titantic_test$PassengerId))
RF_predict_test <- predict(RF, titantic_test2, type = "response")
RF_predict_test
tree3_pred_num_test <- as.numeric(RF_predict_test)-1
submission2 <- data.frame(cbind(titantic_test$PassengerId,tree3_pred_num_test))
submission2[is.na(submission2)] <- 0
names(submission2)[1] <- "PassengerId"
names(submission2)[2] <- "Survived"
write.csv(submission2, file = "submission2.csv", row.names=FALSE)
tree3_pred_test <- predict(boost.tree, titantic_test2, n.trees = 5000, type="response")
tree3_pred_test_num <- ifelse(tree3_pred_train>0.5,1,0)
tree3_pred_test_num <- ifelse(tree3_pred_test_num>0.5,1,0)
tree3_pred_test_num <- ifelse(tree3_pred_test>0.5,1,0)
summary(tree3_pred_test_num)
submission3 <- data.frame(cbind(titantic_test$PassengerId,tree3_pred_test_num))
names(submission3)[1] <- "PassengerId"
names(submission3)[2] <- "Survived"
write.csv(submission3, file = "submission3.csv", row.names=FALSE)
svmfit1 <-svm(Survived ~ Pclass +Sex + SibSp + Fare, data = titantic_train2, kernel = "polynomial", cost = 0.01, degree=2)
summary(svmfit1)
ypred_training <- predict(svmfit1, titantic_train2)
SVM_pred <- predict(svmfit1, titantic_train2)
Training_SVM<-sum(SVM_pred==titantic_train2$Survived)/length(titantic_train2$Survived)
Training_SVM<-sum(SVM_pred==titantic_train2$Survived)/nrow(titantic_train2)
Training_SVM
SVM_pred <- predict(svmfit1, titantic_train2)-1
SVM_pred <- as.numeric(predict(svmfit1, titantic_train2))-1
Training_SVM<-sum(SVM_pred==titantic_train2$Survived)/nrow(titantic_train2)
Training_SVM
table(SVM_pred, titantic_train2$Survived)
View(svmfit1)
svmfit1 <-svm(Survived ~ Pclass +Sex + SibSp + Fare, data = titantic_train2, kernel = "polynomial", cost = 0.01, degree=2)
summary(svmfit1)
SVM_pred <- as.numeric(predict(svmfit1, titantic_train2))-1
svmfit1 <-svm(Survived ~ Pclass +Sex + SibSp , data = titantic_train2, kernel = "polynomial", cost = 0.01, degree=2)
summary(svmfit1)
SVM_pred <- as.numeric(predict(svmfit1, titantic_train2))-1
svmfit1 <-svm(Survived ~ Pclass +Sex + SibSp + Fare, data = titantic_train3, kernel = "polynomial", cost = 0.01, degree=2)
View(titantic_train3)
View(titantic_train)
#?OJ
dim(OJ)
library(ISLR)
plot(OJ$Purchase)
svmfit1 <-svm(Survived ~ Pclass +Sex + SibSp + Fare, data = titantic_train3, kernel = "linear", cost=0.01,scale=FALSE)
svmfit1 <-svm(Survived ~ Pclass +Sex + SibSp + Fare, data = titantic_train3, kernel = "polynomial", cost = 0.01, degree=2)
svmfit1 <-svm(Survived ~ Pclass +Sex + SibSp + Fare, data = titantic_train2, kernel = "polynomial", cost = 0.01, degree=2)
summary(svmfit1)
SVM_pred <- as.numeric(predict(svmfit1, titantic_train2))-1
svmfit1 <-svm(Survived ~ Fare, data = titantic_train2, kernel = "polynomial", cost = 0.01, degree=2)
summary(svmfit1)
SVM_pred <- as.numeric(predict(svmfit1, titantic_train2))-1
table(SVM_pred, titantic_train2$Survived)
SVM_pred <- as.numeric(predict(svmfit1, titantic_train2))-1
svmfit1 <-svm(Survived ~ Fare, data = titantic_train, kernel = "polynomial", cost = 0.01, degree=2)
summary(svmfit1)
SVM_pred <- as.numeric(predict(svmfit1, titantic_train2))-1
SVM_pred <- as.numeric(predict(svmfit1, titantic_train))-1
svmfit1 <-svm(Survived ~ Pclass, data = titantic_train, kernel = "polynomial", cost = 0.01, degree=2)
summary(svmfit1)
SVM_pred1 <- predict(svmfit1, titantic_train)
svmfit<- svm(Purchase~ Fare, data=titantic_train, kernel="linear", cost=0.01,scale=FALSE)
svmfit<- svm(Survived~ Fare, data=titantic_train, kernel="linear", cost=0.01,scale=FALSE)
svmfit<- svm(Survived~ Fare, data=titantic_train, kernel="linear", cost=0.01,scale=FALSE)
SVM_pred <- predict(svmfit1, titantic_train)
SVM_pred <- predict(svmfit, titantic_train)
svmfit<- svm(Survived~ Sex, data=titantic_train, kernel="linear", cost=0.01,scale=FALSE)
SVM_pred <- predict(svmfit, titantic_train)
svmfit<- svm(Survived~ Sex, data=titantic_train2, kernel="linear", cost=0.01,scale=FALSE)
SVM_pred <- predict(svmfit, titantic_train2)
length(SVM_pred)
nrow(titantic_train2)
svmfit<- svm(Survived~ Sex, data=titantic_train2, kernel="linear", cost=0.01,scale=FALSE)
SVM_pred <- predict(svmfit, titantic_train2)
#?OJ
dim(OJ)
train <- sample(nrow(OJ), 800)
data_training <- OJ[train, ]
data_test <- OJ[-train, ]
svmfit<- svm(Purchase~., data=data_training, kernel="linear", cost=0.01,scale=FALSE)
summary(svmfit)
ypred_training <- predict(svmfit, data_training)
length(ypred_training)
summary(OJ)
summary(titantic_train)
svmfit<- svm(Survived ~ Pclass +Sex + SibSp + Fare, data=titantic_train2, kernel="linear", cost=0.01,scale=FALSE)
SVM_pred <- predict(svmfit, titantic_train2)
length(SVM_pred)
SVM_pred <- predict(svmfit, titantic_train2)
svmfit<- svm(Survived ~ Pclass +Sex + SibSp + Fare, data=titantic_train2, kernel="linear", cost=0.01,scale=FALSE)
SVM_pred <- predict(svmfit, titantic_train2)
length(SVM_pred)
svmfit<- svm(Survived ~ Pclass +Sex + SibSp + Fare, data=titantic_train3, kernel="linear", cost=0.01,scale=FALSE)
svmfit<- svm(Survived ~ Fare, data=titantic_train3, kernel="linear", cost=0.01,scale=FALSE)
svmfit<- svm(Survived ~ Fare, data=titantic_train, kernel="linear", cost=0.01,scale=FALSE)
SVM_pred <- predict(svmfit, titantic_train)
length(SVM_pred)
svmfit<- svm(Survived ~ Fare, data=titantic_train, kernel="linear", cost=0.01,scale=FALSE)
SVM_pred <- predict(svmfit, titantic_train)
length(SVM_pred)
svmfit<- svm(Survived ~ Fare, data=titantic_train2, kernel="linear", cost=0.01,scale=FALSE)
SVM_pred <- predict(svmfit, titantic_train2)
length(SVM_pred)
library(e1071)
svmfit1 <-svm(Survived ~ Pclass, data = titantic_train, kernel = "polynomial", cost = 0.01, degree=2)
svmfit<- svm(Survived ~ Fare, data=titantic_train2, kernel="linear", cost=0.01,scale=FALSE)
SVM_pred <- predict(svmfit, titantic_train2)
length(SVM_pred)
svmfit_new <- svm(Survived ~ Fare, data=titantic_train2, kernel="linear", cost=0.01,scale=FALSE)
SVM_pred <- predict(svmfit_new, titantic_train2)
length(SVM_pred)
svmfit_new <- svm(Survived ~ Fare, data=titantic_train3, kernel="linear", cost=0.01,scale=FALSE)
SVM_pred <- predict(svmfit_new, titantic_train3)
svmfit_new <- svm(Survived ~ Fare, data=titantic_train3, kernel="linear", cost=0.01,scale=FALSE, type="C")
SVM_pred <- predict(svmfit_new, titantic_train3)
length(SVM_pred)
SVM_pred <- predict(svmfit_new, titantic_train3)
svmfit_new <- svm(Survived ~ Fare, data=titantic_train, kernel="linear", cost=0.01,scale=FALSE, type="C")
SVM_pred <- predict(svmfit_new, titantic_train3)
length(SVM_pred)
svmfit_new1 <- svm(Survived ~ Fare, data=titantic_train, kernel="linear", cost=0.01,scale=FALSE, type="C")
summary(svmfit_new1)
SVM_pred1 <- predict(svmfit_new1, titantic_train3)
length(SVM_pred1)
svmfit_new1 <- svm(Survived ~ Pclass, data=titantic_train, kernel="linear", cost=0.01,scale=FALSE, type="C")
summary(svmfit_new1)
SVM_pred1 <- predict(svmfit_new1, titantic_train3)
length(SVM_pred1)
SVM_pred1 <- predict(svmfit_new1, titantic_train)
length(SVM_pred1)
svmfit_new1 <- svm(Survived ~ Pclass, data=titantic_train, kernel="polynomial", cost=0.01,scale=FALSE, type="C", degree=2)
summary(svmfit_new1)
SVM_pred1 <- predict(svmfit_new1, titantic_train)
length(SVM_pred1)
svmfit_new1 <- svm(Survived ~ Pclass +Sex + SibSp + Fare, data=titantic_train, kernel="polynomial", cost=0.01,scale=FALSE, type="C", degree=2)
summary(svmfit_new1)
SVM_pred1 <- predict(svmfit_new1, titantic_train)
length(SVM_pred1)
Training_SVM
length(SVM_pred)
Training_SVM<-sum(SVM_pred==titantic_train2$Survived)/nrow(titantic_train2)
Training_SVM
svmfit<- svm(Purchase~., data=data_training, kernel="linear", cost=0.01,scale=FALSE)
summary(svmfit)
ypred_training <- predict(svmfit, data_training)
length(ypred_training)
OJ1<- OJ
View(OJ1)
svmfit_new1 <- svm(Survived ~ Pclass +Sex + SibSp + Fare, data=titantic_train2, kernel="polynomial", cost=0.01,scale=FALSE, type="C", degree=2)
summary(svmfit_new1)
SVM_pred1 <- predict(svmfit_new1, titantic_train2)
length(SVM_pred1)
svmfit_new1 <- svm(Survived ~  Fare, data=titantic_train2, kernel="polynomial", cost=0.01,scale=FALSE, type="C", degree=2)
svmfit_new1 <- svm(Survived ~  Fare, data=titantic_train2,kernel="linear", cost=0.01,scale=FALSE)
summary(svmfit_new1)
SVM_pred1 <- predict(svmfit_new1, titantic_train2)
length(SVM_pred1)
SVM_pred1 <- predict(svmfit_new1, titantic_train2$Fare)
titantic_train4 <-titantic_train2$Fare
length(titantic_train4)
SVM_pred1 <- predict(svmfit_new1, titantic_train4)
titantic_train4 = subset(titantic_train2, select = c(Survived, Fare))
SVM_pred1 <- predict(svmfit_new1, titantic_train4)
length(SVM_pred1)
table(SVM_pred1, titantic_train4$Survived)
Training_SVM<-sum(SVM_pred1==titantic_train4$Survived)/nrow(titantic_train4)
Training_SVM
titantic_train4 = subset(titantic_train2, select = c(Survived, Fare))
titantic_train4 = subset(titantic_train2, select = c(Survived, Fare))
svmfit_new1 <- svm(Survived ~  Fare, data=titantic_train4,kernel="linear", cost=0.01,scale=FALSE)
SVM_pred1 <- predict(svmfit_new1, titantic_train4)
length(SVM_pred1)
summary(svmfit_new1)
SVM_pred1 <- predict(svmfit_new1, titantic_train4)
table(SVM_pred1, titantic_train4$Survived)
Training_SVM
titantic_train5 = subset(titantic_train5, select = c(Survived, Fare, Pclass, Sex, SibSp))
titantic_train5 = subset(titantic_train2, select = c(Survived, Fare, Pclass, Sex, SibSp))
svmfit_new2 <- svm(Survived ~  Pclass +Sex + SibSp + Fare, data=titantic_train5,kernel="linear", cost=0.01,scale=FALSE)
summary(svmfit_new2)
SVM_pred2 <- predict(svmfit_new2, titantic_train5)
lenght(SVM_pred2)
length(SVM_pred2)
Training_SVM2<-sum(SVM_pred1==titantic_train5$Survived)/nrow(titantic_train5)
Training_SVM2
table(SVM_pred2, titantic_train5$Survived)
Training_SVM2<-sum(SVM_pred2==titantic_train5$Survived)/nrow(titantic_train5)
Training_SVM2
table(SVM_pred2, titantic_train5$Survived)
tune.out<- tune(svmfit_new2,Survived ~  Pclass +Sex + SibSp + Fare ,data=titantic_train5,kernel="linear",ranges=list(cost=c(0.01, 0.1, 1,5,10)))
tune.out<- tune(svm,Survived ~  Pclass +Sex + SibSp + Fare ,data=titantic_train5,kernel="linear",ranges=list(cost=c(0.01, 0.1, 1,5,10)))
summary(tune.out)
bestmod <-tune.out$best.model
summary(bestmod)
tune.out.linear<- tune(svm,Survived ~  Pclass +Sex + SibSp + Fare ,data=titantic_train5,kernel="linear",ranges=list(cost=c(0.01, 0.1, 1,5,10)))
summary(tune.out.linear)
summary(bestmod_linear)
bestmod_linear <-tune.out.linear$best.model
summary(bestmod_linear)
SVM_pred_linear <- predict(bestmod_linear, titantic_train5)
table(SVM_pred_linear, titantic_train5$Survived)
Training_SVM_bestlinear<-sum(SVM_pred2==titantic_train5$Survived)/nrow(titantic_train5)
Training_SVM_bestlinear
tune.out.linear<- tune(svm,Survived ~  Pclass +Sex + SibSp + Fare ,data=titantic_train5,kernel="linear",ranges=list(cost=c(0.001, 0.01, 0.1, 1,5,10)))
tune.out.linear<- tune(svm,Survived ~  Pclass +Sex + SibSp + Fare ,data=titantic_train5,kernel="linear",ranges=list(cost=c(0.001, 0.01, 0.1, 1,5,10)))
summary(tune.out.linear)
bestmod_linear <-tune.out.linear$best.model
summary(bestmod_linear)
SVM_pred_linear <- predict(bestmod_linear, titantic_train5)
table(SVM_pred_linear, titantic_train5$Survived)
Training_SVM_bestlinear<-sum(SVM_pred2==titantic_train5$Survived)/nrow(titantic_train5)
Training_SVM_bestlinear
tune.out.radial<- tune(svm,Survived ~  Pclass +Sex + SibSp + Fare ,data=titantic_train5,kernel="radial",ranges=list(cost=c(0.001, 0.01, 0.1, 1,5,10)))
tune.out.radial<- tune(svm,Survived ~  Pclass +Sex + SibSp + Fare ,data=titantic_train5,kernel="radial",ranges=list(cost=c(0.001, 0.01, 0.1, 1,5,10)))
summary(tune.out.linear)
bestmod_radial <-tune.out.radial$best.model
summary(bestmod_radial)
Training_SVM_bestlinear<-sum(SVM_pred_linear==titantic_train5$Survived)/nrow(titantic_train5)
Training_SVM_bestlinear
SVM_pred_radial
bestmod_radial <-tune.out.radial$best.model
summary(bestmod_radial)
SVM_pred_radial <- predict(bestmod_radial, titantic_train5)
table(SVM_pred_radial, titantic_train5$Survived)
Training_SVM_bestradial<-sum(SVM_pred_radial==titantic_train5$Survived)/nrow(titantic_train5)
Training_SVM_bestradial
tune.out.polynomial<- tune(svm,Survived ~  Pclass +Sex + SibSp + Fare ,data=titantic_train5,kernel="polynomial",ranges=list(cost=c(0.001, 0.01, 0.1, 1,5,10)))
tune.out.polynomial<- tune(svm,Survived ~  Pclass +Sex + SibSp + Fare ,data=titantic_train5,kernel="polynomial",ranges=list(cost=c(0.001, 0.01, 0.1, 1,5,10)))
summary(tune.out.polynomial)
bestmod_polynomial <-tune.out.polynomial$best.model
summary(bestmod_polynomial)
SVM_pred_polynomail <- predict(bestmod_polynomial, titantic_train5)
table(SVM_pred_polynomail, titantic_train5$Survived)
Training_SVM_bestpolynomial<-sum(SVM_pred_polynomail==titantic_train5$Survived)/nrow(titantic_train5)
Training_SVM_bestpolynomial
Training_Tree_boost
Training_Tree_RF
Training_SVM_bestradial
Training_SVM_bestpolynomial
Training_SVM_bestlinear
Training_SVM1
Training_SVM1
titantic_train4 = subset(titantic_train2, select = c(Survived, Fare))
svmfit_new1 <- svm(Survived ~  Fare, data=titantic_train4,kernel="linear", cost=0.01,scale=FALSE)
summary(svmfit_new1)
SVM_pred1 <- predict(svmfit_new1, titantic_train4)
table(SVM_pred1, titantic_train4$Survived)
Training_SVM1<-sum(SVM_pred1==titantic_train4$Survived)/nrow(titantic_train4)
Training_SVM1
Training_SVM1
titantic_train3_nomissing <- na.omit(titantic_train3)
titantic_train3_nomissing <- na.omit(subset(titantic_train3, select = c(Survived, Pclass, SibSp, Fare, Age)))
boost.tree <- gbm(Survived ~  Pclass + Sex + SibSp + Fare + Age, data = titantic_train3_nomissing,
distribution = "bernoulli", n.trees = 5000, shrinkage=0.01, verbose=F, interaction.depth = 4)
titantic_train3_nomissing <- na.omit(subset(titantic_train3, select = c(Survived, Pclass, SibSp, Fare, Age, Sex)))
boost.tree <- gbm(Survived ~  Pclass + Sex + SibSp + Fare + Age, data = titantic_train3_nomissing,
distribution = "bernoulli", n.trees = 5000, shrinkage=0.01, verbose=F, interaction.depth = 4)
boost.tree2 <- gbm(Survived ~  Pclass + Sex + SibSp + Fare + Age, data = titantic_train3_nomissing,
distribution = "bernoulli", n.trees = 5000, shrinkage=0.01, verbose=F, interaction.depth = 4)
boost.tree2
summary(boost.tree2)
tree_boost2 <- predict(boost.tree2, titantic_train3, n.trees = 5000, type="response")
tree_boost2 <- predict(boost.tree2, titantic_train3_nomissing, n.trees = 5000, type="response")
tree_boost2 <- ifelse(tree_boost2>0.5,1,0)
Training_Tree_boost2 <- (table(tree3_boost2, titantic_train3_nomissing$Survived)[1,1] + table(tree3_boost2, titantic_train3_nomissing$Survived)[2,2]) / nrow(titantic_train3_nomissing)
tree_boost2 <- predict(boost.tree2, titantic_train3_nomissing, n.trees = 5000, type="response")
tree_boost2 <- ifelse(tree_boost2>0.5,1,0)
Training_Tree_boost2 <- (table(tree3_boost2, titantic_train3_nomissing$Survived)[1,1] + table(tree3_boost2, titantic_train3_nomissing$Survived)[2,2]) / nrow(titantic_train3_nomissing)
Training_Tree_boost2 <- (table(tree_boost2, titantic_train3_nomissing$Survived)[1,1] + table(tree_boost2, titantic_train3_nomissing$Survived)[2,2]) / nrow(titantic_train3_nomissing)
Training_Tree_boost2
tree4_pred_test <- predict(boost.tree2, titantic_test2, n.trees = 5000, type="response")
tree4_pred_test <- predict(boost.tree2, titantic_test2, n.trees = 5000, type="response")
tree4_pred_test_num <- ifelse(tree4_pred_test>0.5,1,0)
summary(tree4_pred_test_num)
submission4 <- data.frame(cbind(titantic_test$PassengerId,tree4_pred_test_num))
submission4 <- data.frame(cbind(titantic_test$PassengerId,tree4_pred_test_num))
names(submission4)[1] <- "PassengerId"
names(submission4)[2] <- "Survived"
write.csv(submission4, file = "submission4.csv", row.names=FALSE)
Training_Tree_boost2
Training_SVM1
Training_SVM_bestlinear
Training_SVM_bestradial
Training_SVM_bestpolynomial
SVM_pred_radial <- predict(bestmod_radial, titantic_test)
SVM_pred_test <- predict(bestmod_radial, titantic_test)
length(SVM_pred_test)
titantic_test = subset(titantic_test, select = c(Survived, Fare, Pclass, Sex, SibSp))
titantic_test = subset(titantic_test, select = c(Fare, Pclass, Sex, SibSp))
SVM_pred_test <- predict(bestmod_polynomial, titantic_test2)
titantic_test2 = subset(titantic_test, select = c(Fare, Pclass, Sex, SibSp))
SVM_pred_test <- predict(bestmod_polynomial, titantic_test2)
length(SVM_pred_test)
titantic_test2
titantic_test2 = subset(titantic_test, select = c(Fare, Pclass, Sex, SibSp, PassengerId))
titantic_test_file <- "C:/Users/duffy/OneDrive/Documents/Masters/2023_Fall/PHC6097/Final Project/test.csv"
titantic_test <- read_csv(titantic_test_file)
titantic_test2 = subset(titantic_test, select = c(Fare, Pclass, Sex, SibSp, PassengerId))
SVM_pred_test <- predict(bestmod_polynomial, titantic_test2)
length(SVM_pred_test)
length(titantic_test)
nrow(titantic_test)
titantic_test
?order
SVM_pred_test[nrow(SVM_pred_test) + 1,] = c(1044, 0)
submission5 <- data.frame(cbind(titantic_test$PassengerId,SVM_pred_test))
submission5 <- data.frame(cbind(na.omit(titantic_test2$PassengerId),SVM_pred_test))
submission5 <- data.frame(cbind(na.omit(titantic_test2$PassengerId),SVM_pred_test))
SVM_pred_test <- predict(bestmod_polynomial, titantic_test2)
length(SVM_pred_test)
nrow(titantic_test)
submission5 <- data.frame(cbind(na.omit(titantic_test2$PassengerId),SVM_pred_test))
titantic_test3 <-na.omit(titantic_test2)
dim(titantic_test3)
submission5 <- data.frame(cbind(titantic_test3$PassengerId,SVM_pred_test))
submission5[nrow(submission5) + 1,] = c(1044, 0)
names(submission5)[1] <- "PassengerId"
names(submission5)[2] <- "Survived"
write.csv(submission5, file = "submission5.csv", row.names=FALSE)
submission5
submission5 <- data.frame(cbind(titantic_test3$PassengerId,SVM_pred_test-1))
submission5 <- data.frame(cbind(titantic_test3$PassengerId,as.numeric(SVM_pred_test)-1))
submission5[nrow(submission5) + 1,] = c(1044, 0)
submission5
names(submission5)[1] <- "PassengerId"
names(submission5)[2] <- "Survived"
submission5
arrange(submission5, PassengerId)
write.csv(submission5, file = "submission5.csv", row.names=FALSE)
Training_SVM2
Training_SVM1
Training_SVM2
Training_SVM_bestlinear
Training_SVM_bestradial
Training_SVM_bestpolynomial
Training_GLM1
Training_GLM2
Training_LDA
Training_QDA
Training_KNN
Training_NB
Training_Tree1
Training_Tree2
Training_KNN
Training_QDA
Training_Tree2
Training_Tree_boost
Training_Tree_RF
Training_SVM1
Training_SVM2
Training_SVM_bestlinear
Training_SVM_bestradial
Training_SVM_bestpolynomial
library(HelloData)
library(ISLR)
intro(OJ)
intro_columns(OJ)
summary(OJ)
rows_with_missing_values(Hitters)
missing_values_by_column(Hitters)
summary(OJ)
help(package="HelloData")
#WD <- 'C:/Users/duffy/OneDrive/Documents/Masters/2023_Fall/PHC6099/Final Project'
#setwd(WD)
#install.packages("HelloData")
#devtools::create("HelloData")
WD2 <- 'C:/Users/duffy/OneDrive/Documents/Masters/2023_Fall/PHC6099/Final Project/HelloData'
setwd(WD2)
devtools::check()
#install.packages("pwr")
#install.packages("devtools")
remove.packages("HelloData")
#WD <- 'C:/Users/duffy/OneDrive/Documents/Masters/2023_Fall/PHC6099/Final Project'
#setwd(WD)
#install.packages("HelloData")
#devtools::create("HelloData")
WD2 <- 'C:/Users/duffy/OneDrive/Documents/Masters/2023_Fall/PHC6099/Final Project/HelloData'
setwd(WD2)
library(devtools)
devtools::install(build_vignettes = TRUE)
